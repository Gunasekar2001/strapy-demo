{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guna\\\\Documents\\\\test\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\"; // Import CSS for default styling\nimport { isValidPhoneNumber, parsePhoneNumber } from \"react-phone-number-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const handlePhoneChange = value => {\n    if (typeof value === \"string\") {\n      // Ensure value is a string before parsing\n      setPhone(value);\n      setIsValid(validatePhoneNumber(value));\n    }\n  };\n  const validatePhoneNumber = phoneNumber => {\n    const parsedPhoneNumber = parsePhoneNumber(phoneNumber);\n\n    // Check if the phone number is valid for the specified countries\n    if (!parsedPhoneNumber || !parsedPhoneNumber.isValid()) {\n      return false;\n    }\n\n    // Check if the phone number is valid for specified countries\n    const validCountries = [\"KE\", \"NG\", \"UG\", \"TZ\", \"ZA\"];\n    if (!validCountries.includes(parsedPhoneNumber.country)) {\n      return false;\n    }\n\n    // Check if the phone number length is appropriate for mobile numbers\n    const mobileNumberLengths = {\n      KE: 9,\n      // Kenya\n      NG: 11,\n      // Nigeria\n      UG: 9,\n      // Uganda\n      TZ: 9,\n      // Tanzania\n      ZA: 9 // South Africa\n    };\n    const expectedLength = mobileNumberLengths[parsedPhoneNumber.country];\n    if (parsedPhoneNumber.number.length !== expectedLength) {\n      return false;\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(PhoneInput, {\n        value: phone,\n        onChange: handlePhoneChange,\n        placeholder: \"Enter phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Invalid phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ooleFoGcrATiMfgr9hN9fpT2Uk0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PhoneInput","isValidPhoneNumber","parsePhoneNumber","jsxDEV","_jsxDEV","App","_s","phone","setPhone","isValid","setIsValid","handlePhoneChange","value","validatePhoneNumber","phoneNumber","parsedPhoneNumber","validCountries","includes","country","mobileNumberLengths","KE","NG","UG","TZ","ZA","expectedLength","number","length","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Guna/Documents/test/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\"; // Import CSS for default styling\nimport { isValidPhoneNumber, parsePhoneNumber } from \"react-phone-number-input\";\n\nfunction App() {\n  const [phone, setPhone] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const handlePhoneChange = (value) => {\n    if (typeof value === \"string\") {\n      // Ensure value is a string before parsing\n      setPhone(value);\n      setIsValid(validatePhoneNumber(value));\n    }\n  };\n\n  const validatePhoneNumber = (phoneNumber) => {\n    const parsedPhoneNumber = parsePhoneNumber(phoneNumber);\n\n    // Check if the phone number is valid for the specified countries\n    if (!parsedPhoneNumber || !parsedPhoneNumber.isValid()) {\n      return false;\n    }\n\n    // Check if the phone number is valid for specified countries\n    const validCountries = [\"KE\", \"NG\", \"UG\", \"TZ\", \"ZA\"];\n    if (!validCountries.includes(parsedPhoneNumber.country)) {\n      return false;\n    }\n\n    // Check if the phone number length is appropriate for mobile numbers\n    const mobileNumberLengths = {\n      KE: 9, // Kenya\n      NG: 11, // Nigeria\n      UG: 9, // Uganda\n      TZ: 9, // Tanzania\n      ZA: 9, // South Africa\n    };\n    const expectedLength = mobileNumberLengths[parsedPhoneNumber.country];\n    if (parsedPhoneNumber.number.length !== expectedLength) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <div>\n      <label>\n        Phone Number:\n        <PhoneInput\n          value={phone}\n          onChange={handlePhoneChange}\n          placeholder=\"Enter phone number\"\n        />\n      </label>\n      {!isValid && <p style={{ color: \"red\" }}>Invalid phone number</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAO,oCAAoC,CAAC,CAAC;AAC7C,SAASC,kBAAkB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMY,iBAAiB,GAAIC,KAAK,IAAK;IACnC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC7B;MACAJ,QAAQ,CAACI,KAAK,CAAC;MACfF,UAAU,CAACG,mBAAmB,CAACD,KAAK,CAAC,CAAC;IACxC;EACF,CAAC;EAED,MAAMC,mBAAmB,GAAIC,WAAW,IAAK;IAC3C,MAAMC,iBAAiB,GAAGb,gBAAgB,CAACY,WAAW,CAAC;;IAEvD;IACA,IAAI,CAACC,iBAAiB,IAAI,CAACA,iBAAiB,CAACN,OAAO,CAAC,CAAC,EAAE;MACtD,OAAO,KAAK;IACd;;IAEA;IACA,MAAMO,cAAc,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;IACrD,IAAI,CAACA,cAAc,CAACC,QAAQ,CAACF,iBAAiB,CAACG,OAAO,CAAC,EAAE;MACvD,OAAO,KAAK;IACd;;IAEA;IACA,MAAMC,mBAAmB,GAAG;MAC1BC,EAAE,EAAE,CAAC;MAAE;MACPC,EAAE,EAAE,EAAE;MAAE;MACRC,EAAE,EAAE,CAAC;MAAE;MACPC,EAAE,EAAE,CAAC;MAAE;MACPC,EAAE,EAAE,CAAC,CAAE;IACT,CAAC;IACD,MAAMC,cAAc,GAAGN,mBAAmB,CAACJ,iBAAiB,CAACG,OAAO,CAAC;IACrE,IAAIH,iBAAiB,CAACW,MAAM,CAACC,MAAM,KAAKF,cAAc,EAAE;MACtD,OAAO,KAAK;IACd;IAEA,OAAO,IAAI;EACb,CAAC;EAED,oBACErB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,GAAO,eAEL,eAAAxB,OAAA,CAACJ,UAAU;QACTY,KAAK,EAAEL,KAAM;QACbsB,QAAQ,EAAElB,iBAAkB;QAC5BmB,WAAW,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EACP,CAACzB,OAAO,iBAAIL,OAAA;MAAG+B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAR,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9D,CAAC;AAEV;AAAC5B,EAAA,CAvDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}