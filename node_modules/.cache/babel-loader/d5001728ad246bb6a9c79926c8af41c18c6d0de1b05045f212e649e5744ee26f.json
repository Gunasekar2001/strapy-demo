{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guna\\\\Documents\\\\test\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input/input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(true); // State to track validation\n\n  const handlePhoneNumberChange = value => {\n    // Custom validation logic to check if it's a mobile phone number\n    const isMobile = /^\\+[1-9]\\d{1,14}$/.test(value);\n    setIsValid(isMobile);\n    if (isMobile) {\n      setPhoneNumber(value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n      placeholder: \"Enter phone number\",\n      value: phoneNumber,\n      onChange: handlePhoneNumberChange,\n      defaultCountry: \"US\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Please enter a valid mobile phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AwQ/j+k57iy06g2OL/MQan6qaRs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PhoneInput","jsxDEV","_jsxDEV","App","_s","phoneNumber","setPhoneNumber","isValid","setIsValid","handlePhoneNumberChange","value","isMobile","test","children","placeholder","onChange","defaultCountry","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Guna/Documents/test/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input/input\";\n\nfunction App() {\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [isValid, setIsValid] = useState(true); // State to track validation\n\n  const handlePhoneNumberChange = (value) => {\n    // Custom validation logic to check if it's a mobile phone number\n    const isMobile = /^\\+[1-9]\\d{1,14}$/.test(value);\n    setIsValid(isMobile);\n    if (isMobile) {\n      setPhoneNumber(value);\n    }\n  };\n\n  return (\n    <div>\n      <PhoneInput\n        placeholder=\"Enter phone number\"\n        value={phoneNumber}\n        onChange={handlePhoneNumberChange}\n        defaultCountry=\"US\"\n      />\n      {!isValid && (\n        <p style={{ color: \"red\" }}>Please enter a valid mobile phone number</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9C,MAAMU,uBAAuB,GAAIC,KAAK,IAAK;IACzC;IACA,MAAMC,QAAQ,GAAG,mBAAmB,CAACC,IAAI,CAACF,KAAK,CAAC;IAChDF,UAAU,CAACG,QAAQ,CAAC;IACpB,IAAIA,QAAQ,EAAE;MACZL,cAAc,CAACI,KAAK,CAAC;IACvB;EACF,CAAC;EAED,oBACER,OAAA;IAAAW,QAAA,gBACEX,OAAA,CAACF,UAAU;MACTc,WAAW,EAAC,oBAAoB;MAChCJ,KAAK,EAAEL,WAAY;MACnBU,QAAQ,EAAEN,uBAAwB;MAClCO,cAAc,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,EACD,CAACb,OAAO,iBACPL,OAAA;MAAGmB,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAT,QAAA,EAAC;IAAwC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACxE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CA1BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA4BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}