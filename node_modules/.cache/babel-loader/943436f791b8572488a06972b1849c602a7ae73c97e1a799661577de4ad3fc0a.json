{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Guna\\\\Documents\\\\test\\\\my-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\"; // Import CSS for default styling\nimport { parsePhoneNumberFromString } from \"react-phone-number-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const handlePhoneChange = value => {\n    setPhone(value);\n    setIsValid(validatePhoneNumber(value, country));\n  };\n  const handleCountryChange = value => {\n    setCountry(value);\n    setIsValid(validatePhoneNumber(phone, value));\n  };\n  const validatePhoneNumber = (phoneNumber, selectedCountry) => {\n    const parsedPhoneNumber = parsePhoneNumberFromString(phoneNumber, selectedCountry);\n\n    // Check if the phone number is valid for the specified country\n    if (!parsedPhoneNumber || !parsedPhoneNumber.isValid()) {\n      return false;\n    }\n\n    // Check if the phone number length is appropriate for the selected country\n    const dialCodeLength = parsedPhoneNumber.countryCallingCode.length;\n    const expectedLength = dialCodeLength + 9; // Assuming mobile number length is 9\n    if (phoneNumber.length !== expectedLength) {\n      return false;\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Country:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: country,\n        onChange: e => handleCountryChange(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"KE\",\n          children: \"Kenya\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"NG\",\n          children: \"Nigeria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"UG\",\n          children: \"Uganda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"TZ\",\n          children: \"Tanzania\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ZA\",\n          children: \"South Africa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Phone Number:\", /*#__PURE__*/_jsxDEV(PhoneInput, {\n        country: country,\n        value: phone,\n        onChange: handlePhoneChange,\n        placeholder: \"Enter phone number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Invalid phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"POqrA1VDXS+9+eVdLfvcwT/X000=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PhoneInput","parsePhoneNumberFromString","jsxDEV","_jsxDEV","App","_s","phone","setPhone","country","setCountry","isValid","setIsValid","handlePhoneChange","value","validatePhoneNumber","handleCountryChange","phoneNumber","selectedCountry","parsedPhoneNumber","dialCodeLength","countryCallingCode","length","expectedLength","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Guna/Documents/test/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\"; // Import CSS for default styling\nimport { parsePhoneNumberFromString } from \"react-phone-number-input\";\n\nfunction App() {\n  const [phone, setPhone] = useState(\"\");\n  const [country, setCountry] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const handlePhoneChange = (value) => {\n    setPhone(value);\n    setIsValid(validatePhoneNumber(value, country));\n  };\n\n  const handleCountryChange = (value) => {\n    setCountry(value);\n    setIsValid(validatePhoneNumber(phone, value));\n  };\n\n  const validatePhoneNumber = (phoneNumber, selectedCountry) => {\n    const parsedPhoneNumber = parsePhoneNumberFromString(\n      phoneNumber,\n      selectedCountry\n    );\n\n    // Check if the phone number is valid for the specified country\n    if (!parsedPhoneNumber || !parsedPhoneNumber.isValid()) {\n      return false;\n    }\n\n    // Check if the phone number length is appropriate for the selected country\n    const dialCodeLength = parsedPhoneNumber.countryCallingCode.length;\n    const expectedLength = dialCodeLength + 9; // Assuming mobile number length is 9\n    if (phoneNumber.length !== expectedLength) {\n      return false;\n    }\n\n    return true;\n  };\n\n  return (\n    <div>\n      <label>\n        Country:\n        <select\n          value={country}\n          onChange={(e) => handleCountryChange(e.target.value)}\n        >\n          <option value=\"\">Select Country</option>\n          <option value=\"KE\">Kenya</option>\n          <option value=\"NG\">Nigeria</option>\n          <option value=\"UG\">Uganda</option>\n          <option value=\"TZ\">Tanzania</option>\n          <option value=\"ZA\">South Africa</option>\n        </select>\n      </label>\n      <br />\n      <label>\n        Phone Number:\n        <PhoneInput\n          country={country}\n          value={phone}\n          onChange={handlePhoneChange}\n          placeholder=\"Enter phone number\"\n        />\n      </label>\n      {!isValid && <p style={{ color: \"red\" }}>Invalid phone number</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}