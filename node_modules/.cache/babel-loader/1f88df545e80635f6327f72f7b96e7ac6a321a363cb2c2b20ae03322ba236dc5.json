{"ast":null,"code":"import React,{useState}from\"react\";import PhoneInput from\"react-phone-number-input\";import\"react-phone-number-input/style.css\";// Import CSS for default styling\nimport validator from\"validator\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[phone,setPhone]=useState(\"\");const[isValid,setIsValid]=useState(true);const handlePhoneChange=value=>{if(typeof value===\"string\"){// Ensure value is a string before validating\nsetPhone(value);setIsValid(validatePhoneNumber(value));}};const validatePhoneNumber=number=>{const isValidPhoneNumber=validator.isMobilePhone(number);return isValidPhoneNumber;};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Phone Number:\",/*#__PURE__*/_jsx(PhoneInput,{value:phone,onChange:handlePhoneChange,placeholder:\"Enter phone number\"})]}),!isValid&&/*#__PURE__*/_jsx(\"p\",{style:{color:\"red\"},children:\"Invalid phone number\"})]});}export default App;","map":{"version":3,"names":["React","useState","PhoneInput","validator","jsx","_jsx","jsxs","_jsxs","App","phone","setPhone","isValid","setIsValid","handlePhoneChange","value","validatePhoneNumber","number","isValidPhoneNumber","isMobilePhone","children","onChange","placeholder","style","color"],"sources":["C:/Users/Guna/Documents/test/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\"; // Import CSS for default styling\nimport validator from \"validator\";\n\nfunction App() {\n  const [phone, setPhone] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n\n  const handlePhoneChange = (value) => {\n    if (typeof value === \"string\") {\n      // Ensure value is a string before validating\n      setPhone(value);\n      setIsValid(validatePhoneNumber(value));\n    }\n  };\n\n  const validatePhoneNumber = (number) => {\n    const isValidPhoneNumber = validator.isMobilePhone(number);\n    return isValidPhoneNumber;\n  };\n\n  return (\n    <div>\n      <label>\n        Phone Number:\n        <PhoneInput\n          value={phone}\n          onChange={handlePhoneChange}\n          placeholder=\"Enter phone number\"\n        />\n      </label>\n      {!isValid && <p style={{ color: \"red\" }}>Invalid phone number</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,0BAA0B,CACjD,MAAO,oCAAoC,CAAE;AAC7C,MAAO,CAAAC,SAAS,KAAM,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE5C,KAAM,CAAAY,iBAAiB,CAAIC,KAAK,EAAK,CACnC,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CAC7B;AACAJ,QAAQ,CAACI,KAAK,CAAC,CACfF,UAAU,CAACG,mBAAmB,CAACD,KAAK,CAAC,CAAC,CACxC,CACF,CAAC,CAED,KAAM,CAAAC,mBAAmB,CAAIC,MAAM,EAAK,CACtC,KAAM,CAAAC,kBAAkB,CAAGd,SAAS,CAACe,aAAa,CAACF,MAAM,CAAC,CAC1D,MAAO,CAAAC,kBAAkB,CAC3B,CAAC,CAED,mBACEV,KAAA,QAAAY,QAAA,eACEZ,KAAA,UAAAY,QAAA,EAAO,eAEL,cAAAd,IAAA,CAACH,UAAU,EACTY,KAAK,CAAEL,KAAM,CACbW,QAAQ,CAAEP,iBAAkB,CAC5BQ,WAAW,CAAC,oBAAoB,CACjC,CAAC,EACG,CAAC,CACP,CAACV,OAAO,eAAIN,IAAA,MAAGiB,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAM,CAAE,CAAAJ,QAAA,CAAC,sBAAoB,CAAG,CAAC,EAC9D,CAAC,CAEV,CAEA,cAAe,CAAAX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}